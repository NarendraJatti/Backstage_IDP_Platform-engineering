https://aws.amazon.com/blogs/opensource/building-developer-portals-with-backstage-and-amazon-eks-blueprints/

https://github.com/awslabs/backstage-plugins-for-aws

https://youtu.be/0rkSzN0XaAQ?si=5N5kXk0ABon_7oPn >>eks terraform

https://www.youtube.com/watch?v=fH6-iDtPrz8 >>aws re-invent

https://youtu.be/SZb24a1ccLY?si=PTr7iv_O9C9hwg9d >>aws

https://www.youtube.com/watch?v=Ii-lpLuzPxw >>gitops

https://www.youtube.com/live/mqhSmAFvQLw?si=XP-fXBebXLoQ03iK

https://youtu.be/J5WpqeHWqQw?si=vTth2ZKOyF7zNZ66



default 30mins refresh     

app-config.yaml file is very cruicial

restart dev server>>yarn dev

restart bs server,if you make any changes

database>>resource

raltionship : API and component

compoents realtions/depends/hierarchy

if there is any mistake in yaml file in git,then backstage will throw error when you import
this entity!!!!
backstage also has caching,watin 2 3mins to fetch new changes  

productivity
so many tools >>all in central place

backend fanf frontend>>backstage 
evverthing is plugin
every plugin is a standalone website(frontend and backend)

Materail UI(MUI) library>>pre build usable components

check lambda deployment with bacstage

Internal Developer portals(IDP)
==============
catalog,documentation hub,ow nership tracking(services),templates,admin controls,searchablility ,
scorecards-helath and security status ,self service ,exitensibliity(plugins)
1) tools
2) documentation
3) resources 

s3 bucket creation request,fill form-approve>>s3 bucket will be provisioned 

react frontend 
and node >backend
plugin based architecture>>provides exitensibliity

Feature
==========>>core features
software catalog
templates>>resources request
documentation >>use Mkdocs
search>>in catalog,do external serach also
plugins 

all features are plugins



catalog(component)
===========
dependency tracking
entity>keep track of -software,api,user/groups,resorucees etc,created useing yaml 
component should be associated with the system

user
====
we can pull(sync) or integrate external users from git,ldap,sso etc
In technology, treating something as a first-class citizen means that it is given the highest level of importance or priority, allowing it to be used or interacted with directly

system
=======
is a collection of resources and components that expose one or serverl public apis
component should be associated with the system
compoentn shuld have an API


domain
=======
business grouping or logical groouping

resource>>is part of some system
=======
db,server,s3 bucket
componet depends on resources 

realtionsship
==========
ownedof ,ownedby
group vs user
parent vs child grooups
define ownrship
compent vs api
compoent1 vs compoent2